[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "file-munging"
version = "0.1.0"
description = "Mung the Files"
authors = ["Brett Lykins <lykinsbd@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "file_munging"}]

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.4"
rich = "^13.4.2"
toml = "^0.10.2"
pydantic = "<2.0"
python-dateutil = "^2.8.2"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.0.0"
isort = "^5.12.0"
pylint = "^2.17.4"
black = "^23.3.0"
bandit = "^1.7.5"

# Install the script
[tool.poetry.scripts]
file-munging = 'file_munging.cli:main'

# Run-time settings
[tool.file-munging]

# Dev Tool Settings

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py      # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.isort]
profile = "black"

[tool.pydocstyle]
convention = "google"
inherit = false
match = "(?!__init__).*\\.py"
match-dir = "(?!tests|migrations|development)[^\\.].*"
# D212 is enabled by default in google convention, and complains if we have a docstring like:
# """
# My docstring is on the line after the opening quotes instead of on the same line as them.
# """
# We've discussed and concluded that we consider this to be a valid style choice.
add_ignore = "D212"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"
# This application uses many Pydantic model classes, which have no public methods.
min-public-methods=0

[tool.pylint.master]
ignore=".venv"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    """
# Pydantic doesn't play nice, this quiets down E0611 (src: https://github.com/samuelcolvin/pydantic/issues/1961)
extension-pkg-whitelist = "pydantic"

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pylint.similarities]
# Don't complain about imports being the same.
ignore-imports=true
# Only call out large chunks of similar code.
min-similarity-lines=12

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "-vv --doctest-modules"
